[{"/home/duynguyen/IDProject/pie_line_3d/src/index.tsx":"1","/home/duynguyen/IDProject/pie_line_3d/src/App.tsx":"2","/home/duynguyen/IDProject/pie_line_3d/src/pages/PipeLine.tsx":"3","/home/duynguyen/IDProject/pie_line_3d/src/three/abstractions/Line.tsx":"4","/home/duynguyen/IDProject/pie_line_3d/src/three/controls/TransformControls.tsx":"5","/home/duynguyen/IDProject/pie_line_3d/src/reportWebVitals.ts":"6","/home/duynguyen/IDProject/pie_line_3d/src/three/index.ts":"7","/home/duynguyen/IDProject/pie_line_3d/src/three/controls/OrbitControls.tsx":"8","/home/duynguyen/IDProject/pie_line_3d/src/three/ContactShadows.tsx":"9","/home/duynguyen/IDProject/pie_line_3d/src/three/useEffectfulState.tsx":"10","/home/duynguyen/IDProject/pie_line_3d/src/three/modifiers/CurveModifier.tsx":"11","/home/duynguyen/IDProject/pie_line_3d/src/three/shapes/shapes.tsx":"12","/home/duynguyen/IDProject/pie_line_3d/src/pages/BaseLine.tsx":"13","/home/duynguyen/IDProject/pie_line_3d/src/resource/json/original.ts":"14","/home/duynguyen/IDProject/pie_line_3d/src/three/camera/PerspectiveCamera.tsx":"15"},{"size":500,"mtime":1612250076786,"results":"16","hashOfConfig":"17"},{"size":551,"mtime":1612409661140,"results":"18","hashOfConfig":"17"},{"size":3117,"mtime":1612432850303,"results":"19","hashOfConfig":"17"},{"size":3513,"mtime":1612402436177,"results":"20","hashOfConfig":"17"},{"size":2395,"mtime":1612261098025,"results":"21","hashOfConfig":"17"},{"size":425,"mtime":1612250076786,"results":"22","hashOfConfig":"17"},{"size":364,"mtime":1612429325383,"results":"23","hashOfConfig":"17"},{"size":1166,"mtime":1612257766309,"results":"24","hashOfConfig":"17"},{"size":4104,"mtime":1612339257208,"results":"25","hashOfConfig":"17"},{"size":685,"mtime":1612320774969,"results":"26","hashOfConfig":"17"},{"size":1348,"mtime":1612317193064,"results":"27","hashOfConfig":"17"},{"size":2405,"mtime":1612317293695,"results":"28","hashOfConfig":"17"},{"size":2222,"mtime":1612347427261,"results":"29","hashOfConfig":"17"},{"size":99823,"mtime":1612414423792,"results":"30","hashOfConfig":"17"},{"size":1093,"mtime":1612429092960,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16oya1",{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/duynguyen/IDProject/pie_line_3d/src/index.tsx",[],"/home/duynguyen/IDProject/pie_line_3d/src/App.tsx",["71","72"],"/home/duynguyen/IDProject/pie_line_3d/src/pages/PipeLine.tsx",["73","74","75","76","77","78","79"],"/home/duynguyen/IDProject/pie_line_3d/src/three/abstractions/Line.tsx",["80","81","82"],"import * as React from 'react'\nimport * as THREE from 'three'\nimport {ReactThreeFiber} from 'react-three-fiber'\nimport {LineGeometry} from 'three/examples/jsm/lines/LineGeometry'\nimport {LineMaterial, LineMaterialParameters} from 'three/examples/jsm/lines/LineMaterial'\nimport {Line2} from 'three/examples/jsm/lines/Line2'\nimport {CurveModifier, CurveModifierRef} from \"../modifiers/CurveModifier\";\n\ntype Props = {\n    points: [number, number, number][]\n    color?: THREE.Color | string | number\n    vertexColors?: [number, number, number][]\n    lineWidth?: number\n} & Omit<ReactThreeFiber.Object3DNode<Line2, typeof Line2>, 'args'> &\n    Omit<ReactThreeFiber.Object3DNode<LineMaterial, [LineMaterialParameters]>,\n        'color' | 'vertexColors' | 'resolution' | 'args'>\n\nexport const Line = React.forwardRef<Line2, Props>(function Line(\n    // eslint-disable-next-line react/prop-types\n    {points, color = 'black', vertexColors, lineWidth, dashed, ...rest},\n    ref\n) {\n    const curveRef = React.useRef<CurveModifierRef>()\n    const [line2] = React.useState(() => new Line2())\n    const [lineMaterial] = React.useState(() => new LineMaterial())\n    const [resolution] = React.useState(() => new THREE.Vector2(512, 512))\n\n    const lineGeom = React.useMemo(() => {\n        const geom = new LineGeometry()\n        // eslint-disable-next-line react/prop-types\n        geom.setPositions(points.flat())\n\n        if (vertexColors) {\n            // eslint-disable-next-line react/prop-types\n            geom.setColors(vertexColors.flat())\n        }\n\n        return geom\n    }, [points, vertexColors])\n\n    React.useEffect(() => {\n        line2.computeLineDistances()\n    }, [line2])\n\n    React.useLayoutEffect(() => {\n        if (dashed) {\n            lineMaterial.defines.USE_DASH = ''\n        } else {\n            // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.\n            delete lineMaterial.defines.USE_DASH\n        }\n        lineMaterial.needsUpdate = true\n    }, [dashed, lineMaterial])\n\n    const handlePos = React.useMemo(\n        () =>\n            // eslint-disable-next-line react/prop-types\n            points.map((hand) => new THREE.Vector3(...hand)),\n        []\n    )\n\n\n    const curve = React.useMemo(\n        () => new THREE.CatmullRomCurve3(handlePos, true, 'centripetal'),\n        [handlePos]\n    )\n\n    const line = React.useMemo(\n        () => {\n            new THREE.Line(\n                new THREE.BufferGeometry().setFromPoints(curve.getPoints(50)),\n                new THREE.LineBasicMaterial({\n                    color: 0xff0000,\n                    opacity: 1\n                })\n            )\n        },\n        [curve]\n    )\n\n    return (\n        <primitive dispose={undefined} object={line2} ref={ref} {...rest}>\n            <primitive dispose={undefined} object={lineGeom} attach=\"geometry\"/>\n            <primitive\n                dispose={undefined}\n                object={lineMaterial}\n                attach=\"material\"\n                color={color}\n                vertexColors={Boolean(vertexColors)}\n                resolution={resolution}\n                linewidth={lineWidth}\n                dashed={dashed}\n                {...rest}\n            />\n        </primitive>\n    )\n\n    // return <>\n    //     <CurveModifier ref={curveRef} curve={curve}>\n    //         <mesh>\n    //             <meshNormalMaterial attach=\"material\"/>\n    //             <primitive object={line}/>\n    //         </mesh>\n    //     </CurveModifier>\n    // </>\n})",[],"/home/duynguyen/IDProject/pie_line_3d/src/three/controls/TransformControls.tsx",["83","84","85"],"// @flow \nimport * as React from 'react';\n\nimport {Object3D, Group} from 'three'\nimport {ReactThreeFiber, useThree, Overwrite} from 'react-three-fiber'\nimport {TransformControls as TransformControlsImpl} from 'three/examples/jsm/controls/TransformControls'\nimport useEffectfulState from \"../useEffectfulState\";\nimport {omit, pick} from 'lodash'\n\nexport type TransformControls = Overwrite<ReactThreeFiber.Object3DNode<TransformControlsImpl, typeof TransformControlsImpl>,\n    { target?: ReactThreeFiber.Vector3 }>\n\ntype Props = JSX.IntrinsicElements['group'] & {\n    enabled: boolean\n    axis: string | null\n    mode: string\n    translationSnap: number | null\n    rotationSnap: number | null\n    scaleSnap?: number | null\n    space: string\n    size: number\n    dragging: boolean\n    showX: boolean\n    showY: boolean\n    showZ: boolean\n}\n\n\n// eslint-disable-next-line react/display-name\nexport const TransformControls = React.forwardRef(\n    ({children, ...props}: { children: React.ReactElement<Object3D> } & TransformControls, ref) => {\n        const transformOnlyPropNames = [\n            'enabled',\n            'axis',\n            'mode',\n            'translationSnap',\n            'rotationSnap',\n            'scaleSnap',\n            'space',\n            'size',\n            'dragging',\n            'showX',\n            'showY',\n            'showZ',\n        ]\n        const transformProps = pick(props, transformOnlyPropNames)\n        const objectProps = omit(props, transformOnlyPropNames)\n\n        const {camera, gl, invalidate} = useThree()\n        const controls = useEffectfulState(\n            () => new TransformControlsImpl(camera, gl.domElement),\n            [camera, gl.domElement],\n            ref as any\n        )\n\n        const group = React.useRef<Group>()\n        React.useLayoutEffect(() => void controls?.attach(group.current as Object3D), [children, controls])\n\n        React.useEffect(() => {\n            controls?.addEventListener?.('change', invalidate)\n            return () => controls?.removeEventListener?.('change', invalidate)\n        }, [controls, invalidate])\n\n        return controls ? (\n            <>\n                <primitive dispose={undefined} object={controls} {...transformProps} />\n                <group\n                    ref={group}\n                >\n                    {children}\n                </group>\n            </>\n        ) : null\n\n    }\n)",[],"/home/duynguyen/IDProject/pie_line_3d/src/reportWebVitals.ts",["86"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",[],"/home/duynguyen/IDProject/pie_line_3d/src/three/index.ts",[],"/home/duynguyen/IDProject/pie_line_3d/src/three/controls/OrbitControls.tsx",["87"],"/home/duynguyen/IDProject/pie_line_3d/src/three/ContactShadows.tsx",["88","89","90"],"import * as React from 'react'\nimport * as THREE from 'three'\nimport {useFrame, useThree} from 'react-three-fiber'\nimport {HorizontalBlurShader} from 'three/examples/jsm/shaders/HorizontalBlurShader'\nimport {VerticalBlurShader} from 'three/examples/jsm/shaders/VerticalBlurShader'\n\ntype Props = JSX.IntrinsicElements['group'] & {\n    opacity?: number\n    width?: number\n    height?: number\n    blur?: number\n    far?: number\n    resolution?: number\n}\n\n// eslint-disable-next-line react/display-name\nexport const ContactShadows = React.forwardRef(\n    ({opacity = 1, width = 1, height = 1, blur = 1, far = 10, resolution = 256, ...props}: Props, ref) => {\n        const {scene, gl} = useThree()\n        const shadowCamera = React.useRef<THREE.OrthographicCamera>()\n        const [\n            renderTarget,\n            planeGeometry,\n            depthMaterial,\n            blurPlane,\n            horizontalBlurMaterial,\n            verticalBlurMaterial,\n            renderTargetBlur,\n        ] = React.useMemo(() => {\n            const renderTarget = new THREE.WebGLRenderTarget(resolution, resolution)\n            const renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution)\n            renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false\n            const planeGeometry = new THREE.PlaneBufferGeometry(width, height).rotateX(Math.PI / 2)\n            const blurPlane = new THREE.Mesh(planeGeometry)\n            const depthMaterial = new THREE.MeshDepthMaterial()\n            depthMaterial.depthTest = depthMaterial.depthWrite = false\n            depthMaterial.onBeforeCompile = (shader) =>\n                (shader.fragmentShader = shader.fragmentShader.replace(\n                    '1.0 - fragCoordZ ), opacity );',\n                    '0.0 ), ( 1.0 - fragCoordZ ) * 1.0 );'\n                ))\n            const horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader)\n            const verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader)\n            verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false\n            return [\n                renderTarget,\n                planeGeometry,\n                depthMaterial,\n                blurPlane,\n                horizontalBlurMaterial,\n                verticalBlurMaterial,\n                renderTargetBlur,\n            ]\n        }, [resolution, width, height])\n\n        useFrame(() => {\n            if (shadowCamera.current) {\n                const initialBackground = scene.background\n                scene.background = null\n                scene.overrideMaterial = depthMaterial\n                gl.setRenderTarget(renderTarget)\n                gl.render(scene, shadowCamera.current)\n                scene.overrideMaterial = null\n                blurPlane.material = horizontalBlurMaterial\n                ;(blurPlane.material as any).uniforms.tDiffuse.value = renderTarget.texture\n                horizontalBlurMaterial.uniforms.h.value = blur / 256\n                gl.setRenderTarget(renderTargetBlur)\n                gl.render(blurPlane, shadowCamera.current)\n                blurPlane.material = verticalBlurMaterial\n                ;(blurPlane.material as any).uniforms.tDiffuse.value = renderTargetBlur.texture\n                verticalBlurMaterial.uniforms.v.value = blur / 256\n                gl.setRenderTarget(renderTarget)\n                gl.render(blurPlane, shadowCamera.current)\n                gl.setRenderTarget(null)\n                scene.background = initialBackground\n            }\n        })\n\n        return (\n            <group {...props} ref={ref as any}>\n                <mesh geometry={planeGeometry} scale={[1, -1, 1]} rotation={[-Math.PI / 2, 0, 0]} receiveShadow={true}>\n                    <meshBasicMaterial\n                        map={renderTarget.texture}\n                        transparent\n                        opacity={opacity}/>\n                </mesh>\n                <orthographicCamera ref={shadowCamera} args={[-width / 2, width / 2, height / 2, -height / 2, 0, far]}/>\n            </group>\n        )\n    }\n)","/home/duynguyen/IDProject/pie_line_3d/src/three/useEffectfulState.tsx",[],"/home/duynguyen/IDProject/pie_line_3d/src/three/modifiers/CurveModifier.tsx",["91"],"import * as React from 'react'\nimport * as THREE from 'three'\nimport {Flow} from 'three/examples/jsm/modifiers/CurveModifier'\n\nexport interface CurveModifierProps {\n    children: React.ReactElement<JSX.IntrinsicElements['mesh']>\n    curve?: THREE.Curve<THREE.Vector3>\n}\n\nexport type CurveModifierRef = Pick<Flow, 'moveAlongCurve'>\n\nexport const CurveModifier = React.forwardRef(({children, curve}: CurveModifierProps, ref) => {\n    const [object3D, setObj] = React.useState<THREE.Object3D | undefined>()\n    const original = React.useRef<THREE.Mesh>()\n    const modifier = React.useRef<Flow>()\n\n    React.useImperativeHandle(ref, () => ({\n        moveAlongCurve: (val: any) => {\n            modifier.current?.moveAlongCurve(val)\n        },\n    }))\n\n    React.useEffect(() => {\n        if (!modifier.current && original.current && ref) {\n            modifier.current = new Flow(original.current)\n            setObj(modifier.current.object3D)\n        }\n    }, [children, ref])\n\n    React.useEffect(() => {\n        if (original.current && curve) {\n            modifier.current?.updateCurve(0, curve)\n        }\n    }, [curve])\n\n    return object3D ? (\n        <primitive object={object3D}/>\n    ) : (\n        React.cloneElement(React.Children.only(children), {\n            ref: original,\n        })\n    )\n})\n\nCurveModifier.displayName = 'CurveModifier'","/home/duynguyen/IDProject/pie_line_3d/src/three/shapes/shapes.tsx",["92","93","94"],"import * as React from 'react'\nimport {\n    BoxBufferGeometry,\n    CircleBufferGeometry,\n    ConeBufferGeometry,\n    CylinderBufferGeometry,\n    DodecahedronBufferGeometry,\n    ExtrudeBufferGeometry,\n    IcosahedronBufferGeometry,\n    LatheBufferGeometry,\n    Mesh,\n    OctahedronBufferGeometry,\n    ParametricBufferGeometry,\n    PlaneBufferGeometry,\n    PolyhedronBufferGeometry,\n    RingBufferGeometry,\n    SphereBufferGeometry,\n    TetrahedronBufferGeometry,\n    TorusBufferGeometry,\n    TorusKnotBufferGeometry,\n    TubeBufferGeometry,\n} from 'three'\n\nexport type Args<T> = T extends new (...args: any) => any ? ConstructorParameters<T> : T\nexport type ShapeProps<T> = Omit<JSX.IntrinsicElements['mesh'], 'args'> & { args?: Args<T> }\n\nfunction create<T>(type: string) {\n    const El: any = type + 'BufferGeometry'\n    // eslint-disable-next-line react/display-name\n    return React.forwardRef(({args, children, ...props}: ShapeProps<T>, ref) => (\n        <mesh ref={ref as React.MutableRefObject<Mesh>} {...props}>\n            <El attach=\"geometry\" args={args}/>\n            {children}\n        </mesh>\n    ))\n}\n\nexport const Box = create<typeof BoxBufferGeometry>('box')\nexport const Circle = create<typeof CircleBufferGeometry>('circle')\nexport const Cone = create<typeof ConeBufferGeometry>('cone')\nexport const Cylinder = create<typeof CylinderBufferGeometry>('cylinder')\nexport const Sphere = create<typeof SphereBufferGeometry>('sphere')\nexport const Plane = create<typeof PlaneBufferGeometry>('plane')\nexport const Tube = create<typeof TubeBufferGeometry>('tube')\nexport const Torus = create<typeof TorusBufferGeometry>('torus')\nexport const TorusKnot = create<typeof TorusKnotBufferGeometry>('torusKnot')\nexport const Tetrahedron = create<typeof TetrahedronBufferGeometry>('tetrahedron')\nexport const Ring = create<typeof RingBufferGeometry>('ring')\nexport const Polyhedron = create<typeof PolyhedronBufferGeometry>('polyhedron')\nexport const Icosahedron = create<typeof IcosahedronBufferGeometry>('icosahedron')\nexport const Octahedron = create<typeof OctahedronBufferGeometry>('octahedron')\nexport const Dodecahedron = create<typeof DodecahedronBufferGeometry>('dodecahedron')\nexport const Extrude = create<typeof ExtrudeBufferGeometry>('extrude')\nexport const Lathe = create<typeof LatheBufferGeometry>('lathe')\nexport const Parametric = create<typeof ParametricBufferGeometry>('parametric')","/home/duynguyen/IDProject/pie_line_3d/src/pages/BaseLine.tsx",["95","96","97","98","99","100","101"],"/home/duynguyen/IDProject/pie_line_3d/src/resource/json/original.ts",[],"/home/duynguyen/IDProject/pie_line_3d/src/three/camera/PerspectiveCamera.tsx",[],{"ruleId":"102","severity":1,"message":"103","line":4,"column":9,"nodeType":"104","messageId":"105","endLine":4,"endColumn":17},{"ruleId":"106","severity":1,"message":"107","line":7,"column":13,"nodeType":"108","messageId":"109","endLine":7,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":11,"column":25,"nodeType":"108","messageId":"109","endLine":11,"endColumn":42},{"ruleId":"102","severity":1,"message":"110","line":11,"column":26,"nodeType":"104","messageId":"105","endLine":11,"endColumn":38},{"ruleId":"102","severity":1,"message":"111","line":12,"column":11,"nodeType":"104","messageId":"105","endLine":12,"endColumn":19},{"ruleId":"112","severity":1,"message":"113","line":13,"column":55,"nodeType":"114","messageId":"115","endLine":13,"endColumn":60},{"ruleId":"102","severity":1,"message":"116","line":14,"column":11,"nodeType":"104","messageId":"105","endLine":14,"endColumn":28},{"ruleId":"112","severity":1,"message":"113","line":14,"column":67,"nodeType":"114","messageId":"115","endLine":14,"endColumn":72},{"ruleId":"112","severity":1,"message":"113","line":15,"column":49,"nodeType":"114","messageId":"115","endLine":15,"endColumn":54},{"ruleId":"102","severity":1,"message":"117","line":7,"column":9,"nodeType":"104","messageId":"105","endLine":7,"endColumn":22},{"ruleId":"102","severity":1,"message":"111","line":23,"column":11,"nodeType":"104","messageId":"105","endLine":23,"endColumn":19},{"ruleId":"102","severity":1,"message":"118","line":68,"column":11,"nodeType":"104","messageId":"105","endLine":68,"endColumn":15},{"ruleId":"102","severity":1,"message":"119","line":13,"column":6,"nodeType":"104","messageId":"105","endLine":13,"endColumn":11},{"ruleId":"102","severity":1,"message":"120","line":47,"column":15,"nodeType":"104","messageId":"105","endLine":47,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":53,"column":20,"nodeType":"123","messageId":"124","endLine":53,"endColumn":23,"suggestions":"125"},{"ruleId":"106","severity":1,"message":"107","line":3,"column":25,"nodeType":"108","messageId":"109","endLine":3,"endColumn":57},{"ruleId":"121","severity":1,"message":"122","line":18,"column":16,"nodeType":"123","messageId":"124","endLine":18,"endColumn":19,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"122","line":65,"column":41,"nodeType":"123","messageId":"124","endLine":65,"endColumn":44,"suggestions":"127"},{"ruleId":"121","severity":1,"message":"122","line":70,"column":41,"nodeType":"123","messageId":"124","endLine":70,"endColumn":44,"suggestions":"128"},{"ruleId":"121","severity":1,"message":"122","line":80,"column":43,"nodeType":"123","messageId":"124","endLine":80,"endColumn":46,"suggestions":"129"},{"ruleId":"121","severity":1,"message":"122","line":18,"column":31,"nodeType":"123","messageId":"124","endLine":18,"endColumn":34,"suggestions":"130"},{"ruleId":"121","severity":1,"message":"122","line":24,"column":47,"nodeType":"123","messageId":"124","endLine":24,"endColumn":50,"suggestions":"131"},{"ruleId":"121","severity":1,"message":"122","line":24,"column":55,"nodeType":"123","messageId":"124","endLine":24,"endColumn":58,"suggestions":"132"},{"ruleId":"121","severity":1,"message":"122","line":28,"column":15,"nodeType":"123","messageId":"124","endLine":28,"endColumn":18,"suggestions":"133"},{"ruleId":"102","severity":1,"message":"134","line":5,"column":9,"nodeType":"104","messageId":"105","endLine":5,"endColumn":17},{"ruleId":"106","severity":1,"message":"107","line":11,"column":25,"nodeType":"108","messageId":"109","endLine":11,"endColumn":42},{"ruleId":"102","severity":1,"message":"110","line":11,"column":26,"nodeType":"104","messageId":"105","endLine":11,"endColumn":38},{"ruleId":"112","severity":1,"message":"113","line":12,"column":55,"nodeType":"114","messageId":"115","endLine":12,"endColumn":60},{"ruleId":"112","severity":1,"message":"113","line":13,"column":67,"nodeType":"114","messageId":"115","endLine":13,"endColumn":72},{"ruleId":"112","severity":1,"message":"113","line":14,"column":49,"nodeType":"114","messageId":"115","endLine":14,"endColumn":54},{"ruleId":"121","severity":1,"message":"122","line":24,"column":38,"nodeType":"123","messageId":"124","endLine":24,"endColumn":41,"suggestions":"135"},"@typescript-eslint/no-unused-vars","'BaseLine' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","'props' is defined but never used.","'curveRef' is assigned a value but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","'transformControls' is assigned a value but never used.","'CurveModifier' is defined but never used.","'line' is assigned a value but never used.","'Props' is defined but never used.","'objectProps' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["136","137"],["138","139"],["140","141"],["142","143"],["144","145"],["146","147"],["148","149"],["150","151"],["152","153"],"'PipeLine' is defined but never used.",["154","155"],{"messageId":"156","fix":"157","desc":"158"},{"messageId":"159","fix":"160","desc":"161"},{"messageId":"156","fix":"162","desc":"158"},{"messageId":"159","fix":"163","desc":"161"},{"messageId":"156","fix":"164","desc":"158"},{"messageId":"159","fix":"165","desc":"161"},{"messageId":"156","fix":"166","desc":"158"},{"messageId":"159","fix":"167","desc":"161"},{"messageId":"156","fix":"168","desc":"158"},{"messageId":"159","fix":"169","desc":"161"},{"messageId":"156","fix":"170","desc":"158"},{"messageId":"159","fix":"171","desc":"161"},{"messageId":"156","fix":"172","desc":"158"},{"messageId":"159","fix":"173","desc":"161"},{"messageId":"156","fix":"174","desc":"158"},{"messageId":"159","fix":"175","desc":"161"},{"messageId":"156","fix":"176","desc":"158"},{"messageId":"159","fix":"177","desc":"161"},{"messageId":"156","fix":"178","desc":"158"},{"messageId":"159","fix":"179","desc":"161"},"suggestUnknown",{"range":"180","text":"181"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"180","text":"182"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"183","text":"181"},{"range":"183","text":"182"},{"range":"184","text":"181"},{"range":"184","text":"182"},{"range":"185","text":"181"},{"range":"185","text":"182"},{"range":"186","text":"181"},{"range":"186","text":"182"},{"range":"187","text":"181"},{"range":"187","text":"182"},{"range":"188","text":"181"},{"range":"188","text":"182"},{"range":"189","text":"181"},{"range":"189","text":"182"},{"range":"190","text":"181"},{"range":"190","text":"182"},{"range":"191","text":"181"},{"range":"191","text":"182"},[1716,1719],"unknown","never",[820,823],[2884,2887],[3215,3218],[3625,3628],[669,672],[602,605],[610,613],[788,791],[926,929]]